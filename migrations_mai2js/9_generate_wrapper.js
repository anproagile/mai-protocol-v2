const fs = require("fs");

const autoGenerateAddressesWrapper = (host, network, addresses) => {
    return `// NOTE: THIS FILE WAS AUTOMATICALLY GENERATED BY mai-protocol-v2

export const testRpc = '${host}' // ${network}
export const testContractReader = "${addresses.contractReader.contractReader}"
export const testAdmin = '0x6766F3CFD606E1E428747D3364baE65B6f914D56'
export const testDev = '0x6766F3CFD606E1E428747D3364baE65B6f914D56'
export const testU2 = '0x3eB06F432aE8f518A957852AA44776c234b4a84a'
export const testU7 = '0x6109d8Fdb3104bc329f7FA1d29c6b4A9A4D3F6AC'
export const testUser = '0x6109d8fdb3104bc329f7fa1d29c6b4a9a4d3f6ac' // address (7) in our ganache test env
export const testUserPK = '0x1c6a05d6d52954b74407a62f000450d0a748d26a7cc3477cd7f8d7c41d4992ce' // address (2) in our ganache test env
export const dataTestAddress = {
    perp: '${addresses.dataTestAddress.perpetual}',
    perpProxy: '${addresses.dataTestAddress.proxy}',
    amm: '${addresses.dataTestAddress.amm}',
    testToken: '${addresses.dataTestAddress.testToken}',
}
export const transactTestAddress = {
    perp: '${addresses.transactTestAddress.perpetual}',
    perpProxy: '${addresses.transactTestAddress.proxy}',
    amm: '${addresses.transactTestAddress.amm}',
    testToken: '${addresses.transactTestAddress.testToken}',
}
export const transactEthTestAddress = {
    perp: '${addresses.transactEthTestAddress.perpetual}',
    perpProxy: '${addresses.transactEthTestAddress.proxy}',
    amm: '${addresses.transactEthTestAddress.amm}',
    testToken: '${addresses.transactEthTestAddress.testToken}',
}`;

};

module.exports = async function (deployer, network) {
    if (!process.env.ADDRESS_OUTPUT_PATH) {
        console.log("   > ADDRESS_OUTPUT_PATH needs to be set");
        return;
    }

    const rawFilePath = process.env.ADDRESS_OUTPUT_PATH;
    const outputPath = process.env.WRAPPER_OUTPUT_PATH;

    const config = deployer.networks[deployer.network];
    let host;
    if (config.host.includes("http")) {
        host = `${config.host}:${config.port}`;
    } else {
        host = `http://${config.host}:${config.port}`;
    }

    const addresses = JSON.parse(fs.readFileSync(rawFilePath));
    const content = autoGenerateAddressesWrapper(host, network, addresses);
    fs.writeFileSync(outputPath, content);

    console.log("   > Auto generated addresses file has been successfully saved to", outputPath);
};
